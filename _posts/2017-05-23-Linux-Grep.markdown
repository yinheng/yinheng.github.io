<<<<<<< HEAD
---
layout:     post
title:      "Linux grep"
date:       2017/5/23 16:37:38 
author:     "Nick"
published: true
categories: Shell
---

### 1.作用

Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。

<!-- more -->

### 2.格式
```
grep [options]
```

3.主要参数
[options]主要参数：
```
－c：只输出匹配行的计数。
－I：不区分大 小写(只适用于单字符)。
－h：查询多文件时不显示文件名。
－l：查询多文件时只输出包含匹配字符的文件名。
－n：显示匹配行及 行号。
－s：不显示不存在或无匹配文本的错误信息。
－v：显示不包含匹配文本的所有行。
pattern正则表达式主要参数：
\： 忽略正则表达式中特殊字符的原有含义。
^：匹配正则表达式的开始行。
$: 匹配正则表达式的结束行。
\<：从匹配正则表达 式的行开始。
\>：到匹配正则表达式的行结束。
[ ]：单个字符，如[A]即A符合要求 。
[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。
。：所有的单个字符。
=======
---
layout:     post
title:      "Linux grep"
date:       2017/5/23 16:37:38 
author:     "Nick"
published: true
categories: Shell
---
### 1.作用

Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。

<!-- more -->

### 2.格式
```
grep [options]
```

3.主要参数
[options]主要参数：
```
－c：只输出匹配行的计数。
－I：不区分大 小写(只适用于单字符)。
－h：查询多文件时不显示文件名。
－l：查询多文件时只输出包含匹配字符的文件名。
－n：显示匹配行及 行号。
－s：不显示不存在或无匹配文本的错误信息。
－v：显示不包含匹配文本的所有行。
-r, --recursive           等同于--directories=recurse
-R, --dereference-recursive       同上，但遍历所有符号链接

pattern正则表达式主要参数：
\： 忽略正则表达式中特殊字符的原有含义。
^：匹配正则表达式的开始行。
$: 匹配正则表达式的结束行。
\<：从匹配正则表达 式的行开始。
\>：到匹配正则表达式的行结束。
[ ]：单个字符，如[A]即A符合要求 。
[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。
。：所有的单个字符。
>>>>>>> 070cb0e20217738cd1346fd3870fde59fd9e6a24
* ：有字符，长度可以为0。
```

### 4.grep命令使用简单实例
```grep "test" d*```

显示所有以d开头的文件中包含 test的行。

```grep "test" aa bb cc```

显示在aa，bb，cc文件中匹配test的行。

```grep ‘[a-z]\{5\}’ aa```

显示所有包含每个字符串至少有5个连续小写字符的字符串的行。

```grep "w\(es\)t.*\1" aa```

如果west被匹配，则es就被存储到内存中，并标记为1，然后搜索任意个字符(.*)，这些字符后面紧跟着 另外一个es(\1)，找到就显示该行。如果用egrep或grep -E，就不用”\”号进行转义，直接写成’w(es)t.*\1′就可以了。

```grep HELLO . -rni```

搜索当前目录，包含HELLO的所有文件。不区分大小写，包含子文件夹，打印所在行数。
